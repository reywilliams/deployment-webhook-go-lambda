name: get-tooling-binaries
description: Workflow to get binaries for tooling

inputs:
  application:
    description: The application to interact with
    required: true
  tenv_version:
    description: The tenv version to use
    required: true
  github_workspace:
    description: GitHub Workspace Path
    required: true
    default: /github/workspace

runs:
  using: "composite"
  steps:
    - name: Flip tenv flags
      shell: bash
      run: |
        echo "TENV_AUTO_INSTALL=true" >> $GITHUB_ENV
        echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV
        echo "TENV_ROOT=${{ inputs.github_workspace }}/.tenv" >> $GITHUB_ENV

    - name: Restore tenv cache
      id: cache-tenv-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          *tenv*
          ${{ inputs.github_workspace }}/.tenv
        key: ${{ runner.os }}-tenv-${{ inputs.tenv_version }}-${{ hashFiles('**/.*terragrunt-version') }}-${{ hashFiles('**/.*terraform-version') }}
        restore-keys: |
          ${{ runner.os }}-tenv-${{ inputs.tenv_version }}-${{ hashFiles('**/.*terragrunt-version') }}-
          ${{ runner.os }}-tenv-${{ inputs.tenv_version }}-

    - name: Download tenv (cache miss)
      if: steps.cache-tenv-restore.outputs.cache-hit != 'true'
      shell: bash
      run: |
        curl -s -L -O "https://github.com/tofuutils/tenv/releases/download/${{ inputs.tenv_version }}/tenv_${{ inputs.tenv_version }}_amd64.deb

    - name: Install tenv
      shell: bash
      run: |
        sudo dpkg -i tenv_${{ inputs.tenv_version }}_amd64.deb
        tenv update-path

    - name: Install Terraform
      working-directory: ./terraform/configuration/us-west-2/dev/applications/${{ inputs.application }}
      shell: bash
      run: |
        tenv terraform install

    - name: Install Terragrunt
      working-directory: ./terraform/configuration/us-west-2/dev/applications/${{ inputs.application }}
      shell: bash
      run: |
        tenv terragrunt install

    - name: Cache tenv (w/ Terraform and Terragrunt) installation
      if: steps.cache-tenv-restore.outputs.cache-hit != 'true'
      id: cache-tenv-save
      uses: actions/cache/save@v4
      with:
        path: |
          *tenv*
          ${{ inputs.github_workspace }}/.tenv
        key: ${{ steps.cache-tenv-restore.outputs.cache-primary-key }}
